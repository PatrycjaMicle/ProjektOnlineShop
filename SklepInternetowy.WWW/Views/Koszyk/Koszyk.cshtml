@model List<ElementKoszykaForView>

@{
    ViewData["Title"] = "Koszyk";
}

<style>
    .button {
        background: linear-gradient(to right, #1a1a1a, #2c2c2c, #4d4d4d, #666666);
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s ease;
        margin-top: 20px;
    }

    .background-gardient {
        background: linear-gradient(to right, #f0f0f0, #fff);
    }

</style>

<a class="nav-link text-dark fw-bold" asp-area="" asp-controller="Sklep" asp-action="Sklep">Wroc do sklepu</a>

<div class="text-center">
    <h1 class="display-4">Koszyk</h1>
</div>

<div id="cartContent" class="container">
    @if (Model.Count > 0)
    {
        <ul class="list-group container">
            @foreach (var elementKoszyka in Model)
            {
                <li class="list-group-item background-gardient">
                    <div class="mb-4 background-gardient">
                        <div class="background-gardient">
                            <h5 class="card-title">@elementKoszyka.TowarNazwa</h5>
                            <p class="card-text">Ilość: @elementKoszyka.Ilosc</p>
                            <p class="card-text">Cena: @elementKoszyka.TowarCena</p>
                        </div>
                    </div>
                </li>
            }
        </ul>
        <div class="text-center">
            <button class="button" onclick="placeOrder()">Zloz zamowienie</button>
        </div>
    }
    else
    {
        <div class="text-center">
            <p>Twoj koszyk jest pusty!</p>
        </div>
    }
</div>

@section scripts {
    <script>
        // to implement
        function placeOrder() {

            // Refresh the page after placing the order or move to another page ?
            location.reload();
        }
    </script>
}
